import java.util.ArrayList;

public class Game {
	public int numPlayers;
	public Player[] players;
	public Player dealer;
	public Deck deck;
	public int dealerUp;
	public ArrayList<String> countList = new ArrayList<>();
	int chips;
	
	public Game(int simplePlayers, int KOCounters, int chips, int minBet){
		this.numPlayers = simplePlayers + KOCounters;
		this.players = new Player[numPlayers];
		for (int i = 0; i < simplePlayers; i++){
			Player p = new SimplePlayer(chips, i+1, minBet);
			players[i] = p;
		}
		for (int i = simplePlayers; i < numPlayers; i++){
			Player p = new KOCounterPlayer(chips, i+1, minBet);
			players[i] = p;
		}
		this.dealer = new Dealer();
		this.deck = new Deck(8);
		this.chips = chips;
	}
	
	public void newShuffle(){
		for (Player p : players)
			p.newShuffle();
	}
	
	public void deal(){
		countList.clear();
		dealer.newRound();
		String c;
		for(Player p : players){
			p.newRound();
			c = deck.deal();
			if(c.length() == 2){
				c = deck.deal();
				newShuffle();
			}
			p.addCard(c);
			countList.add(c);
		}
		c = deck.deal();
		if(c.length() == 2){
			c = deck.deal();
			newShuffle();
		}
		dealer.addCard(c);
		countList.add(c);
		
		for(Player p : players){
			c = deck.deal();
			if(c.length() == 2){
				c = deck.deal();
				newShuffle();
			}
			p.addCard(c);
			countList.add(c);
		}
		c = deck.deal();
		if(c.length() == 2){
			c = deck.deal();
			newShuffle();
		}
		String dealerSecond = c;
		countList.add(dealerSecond);
		
		dealer.addCard(dealerSecond);
		dealerUp = dealer.dealerUp();
	}
	
	public void printTotals(){
		System.out.print("\n");
		for(Player p : players){
			int net = chips;
			if (p.chips() > net)
				net = p.chips() - chips;
			else if (p.chips() < net && p.chips() > 0)
				net = p.chips() - net;
			else
				net = net + p.chips();
			System.out.println("Player " + p.playerIndex() + "\n\tTotal Chips: " + Integer.toString(p.chips()) + "\n\tNet: " + Integer.toString(net));
		}
		System.out.print("\n");
	}
	
	public void calculateRound(Player p, Player d){
		if(p.choice().equals("Bust"))
			p.loseHand();
		else if(p.choice().equals("Stay")){
			if(d.choice().equals("Bust"))
				p.winHand();
			if (p.sumCards() < d.sumCards())
				p.loseHand();
			if (p.sumCards() > d.sumCards())
				p.winHand();
		}
	}
	
	public void printRound(Player p, Player d){
		p.printHand();
		if(p.choice().equals("Bust")){
			p.loseHand();
			System.out.print(" You Lose! Busted.");
		}
		else if(p.choice().equals("Stay")){
			if(d.choice().equals("Bust")){
				System.out.print(" You Win! Dealer Busted.");
				p.winHand();
			}
			else if (p.sumCards() < d.sumCards()){
				System.out.print(" You Lose! Dealer's cards are greater" );
				p.loseHand();
			}
			else if (p.sumCards() > d.sumCards()){
				System.out.print(" You win! Your cards are greater!");
				p.winHand();
			}
			else
				System.out.print(" Push.");
		}
		System.out.print("\n");
	}
	
	public void playPrintedRound(){
		deal();
		System.out.println("Dealer Up: " + Integer.toString(dealerUp));
		for(Player p : players){
			String choice = p.play(dealerUp, countList);
			while(choice.equals("Hit")){
				p.addCard(deck.deal());
				choice = p.play(dealerUp, countList);
			}
		}
		String dc = dealer.play(0, countList);
		while(dc.equals("Hit")){
			dealer.addCard(deck.deal());
			dc = dealer.play(dealerUp, countList);
		}
		for (Player p : players){
			printRound(p, dealer);
		}
		dealer.printHand();

		System.out.print("\n");
	}
	
	public void playRound(){
		for(Player p: players)
			p.bet();
		deal();
		for(Player p : players){
			String choice = p.play(dealerUp, countList);
			while(choice.equals("Hit")){
				p.addCard(deck.deal());
				choice = p.play(dealerUp, countList);
			}
		}
		String dc = dealer.play(0, countList);
		while(dc.equals("Hit")){
			dealer.addCard(deck.deal());
			dc = dealer.play(dealerUp, countList);
		}
		for (Player p : players){
			calculateRound(p, dealer);
		}
	}

}